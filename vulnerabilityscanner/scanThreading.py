import re
import vulnDb
from CheckHostAlive import CheckHostAlive
from gatherinformation import Hostinformation
import pyfiglet
from datetime import datetime
import threading
import time

#start = time.time()
print("Enter/Paste hosts to scan (can be multiline)..")
hosts = []
while True:
    line = input()
    if not line:
        con = str(input("Do you want to continue entering hosts (Enter yes, if want to continue): "))
        y = {"y", "yes", "Yes", "YES", "Y"}
        if con in y:
           continue
        else:
           break
    else:
        hosts.append(line)

alive = []
dead = []

for host in hosts:
    result = CheckHostAlive.probeAlive(host)
    if result == 0:
        alive.append(host)
    else:
        dead.append(host)

ascii_banner = pyfiglet.figlet_format("VULNERABILITY SCANNER")
print(ascii_banner)

if dead:
    print("dead hosts %s" %(",".join(dead)))

print("alive hosts %s" %(",".join(alive)))

screen_lock = threading.Semaphore(value=1)
def scan(host):
    screen_lock.acquire()
    # Add Banner
    print("-" * 50)
    print("Scanning Target: " + host)
    print("Scanning started at:" + str(datetime.now()))
    print("-" * 50)
    h = Hostinformation(host)
    openPorts = h.portOpen()
    print("Ports open are - %s" % (",".join(openPorts)))
    os = h.osDetection()
    print("Operating system is \"%s\"" % (os[0]['name']))
    services = h.serviceRunning()
    cust_services = []
    for service in services:
        new_ser = {}
        if 'name' in service:
            new_ser['name'] = service['name']
        if 'product' in service:
            new_ser['product'] = service['product']
        cust_services.append(new_ser)
    for ser in cust_services:
        if 'product' in ser:
            print("Found service name \"%s\" for product \"%s\"" % (ser['name'], ser['product']))
        else:
            print("Found service name \"%s\" without product" % (ser['name']))

    if re.search("Linux", os[0]['name']):
        print("Checking vulnerabilities of installed packages on Linux node....\n")
        vulnDb.vulnDetailsLinux(host)
    screen_lock.release()

threads = []

for host in alive:
    x = threading.Thread(target=scan, args=(host,))
    threads.append(x)
    x.start()

for thread in threads:
    thread.join()
#end = time.time()
#print(end-start)